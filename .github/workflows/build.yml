name: Build & publish eXo JDK images
on:
  schedule:
    - cron: "0 22 * * 6" # Every Saturday at 10 PM UTC
  workflow_dispatch:

jobs:
  build-jdk-images:
    name: "Build JDK Images"
    strategy:
      fail-fast: false
      matrix:
        include:
          # JDK 21
          ## Ubuntu 22.04 (latest)
          - context: openjdk-21/ubuntu/22.04
            imageTag: latest,21,21-ubuntu,21-ubuntu-22,21-ubuntu-2204,openjdk-21,openjdk-21-ubuntu,openjdk-21-ubuntu-22,openjdk-21-ubuntu-2204
          # JDK 17
          ## Ubuntu 22.04
          - context: openjdk-17/ubuntu/22.04
            imageTag: 17,17-ubuntu,17-ubuntu-22,17-ubuntu-2204,openjdk-17,openjdk-17-ubuntu,openjdk-17-ubuntu-22,openjdk-17-ubuntu-2204
          ## Ubuntu 20.04
          - context: openjdk-17/ubuntu/20.04
            imageTag: 17-ubuntu-20,17-ubuntu-2004,openjdk-17-ubuntu-20,openjdk-17-ubuntu-2004
          # JDK 14
          ## Ubuntu 22.04
          - context: openjdk-14/ubuntu/22.04
            imageTag: 14,14-ubuntu,14-ubuntu-22,14-ubuntu-2204,openjdk-14,openjdk-14-ubuntu,openjdk-14-ubuntu-22,openjdk-14-ubuntu-2204
          ## Ubuntu 20.04
          - context: openjdk-14/ubuntu/20.04
            imageTag: 14-ubuntu-20,14-ubuntu-2004,openjdk-14-ubuntu-20,openjdk-14-ubuntu-2004
          # JDK 11
          ## Ubuntu 22.04
          - context: openjdk-11/ubuntu/22.04
            imageTag: 11,11-ubuntu,11-ubuntu-22,11-ubuntu-2204,openjdk-11,openjdk-11-ubuntu,openjdk-11-ubuntu-22,openjdk-11-ubuntu-2204
          ## Ubuntu 20.04
          - context: openjdk-11/ubuntu/20.04
            imageTag: 11-ubuntu-20,11-ubuntu-2004,openjdk-11-ubuntu-20,openjdk-11-ubuntu-2004
          # JDK 8
          ## Ubuntu 22.04
          - context: openjdk-8/ubuntu/22.04
            imageTag: 8,8-ubuntu,8-ubuntu-22,8-ubuntu-2204,openjdk-8,openjdk-8-ubuntu,openjdk-8-ubuntu-22,openjdk-8-ubuntu-2204
          ## Ubuntu 20.04
          - context: openjdk-8/ubuntu/20.04
            imageTag: 8-ubuntu-20,8-ubuntu-2004,openjdk-8-ubuntu-20,openjdk-8-ubuntu-2004

    uses: exoplatform/swf-scripts/.github/workflows/buildDockerImage.yml@master
    with:
      dockerImage: "exoplatform/jdk"
      dockerFileContext: ${{ matrix.context }}
      dockerImageTag: ${{ matrix.imageTag }}
      signImage: true
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_PRIVATE_KEY_ID: ${{ secrets.DOCKER_PRIVATE_KEY_ID }}
      DOCKER_PRIVATE_KEY: ${{ secrets.DOCKER_PRIVATE_KEY }}
      DOCKER_PRIVATE_KEY_PASSPHRASE: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}
