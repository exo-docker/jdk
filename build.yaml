steps:

# Build the JDK 8 + Ubuntu 16.04 and 18.04 versions.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/exo-docker/jdk:8-ubuntu-1604', '.']
  dir: '8/ubuntu/16.04'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/exo-docker/jdk:8-ubuntu-1804', '.']
  dir: '8/ubuntu/18.04'

  # Add more tags
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu-1604', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu-16']
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu-1804', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu-18']
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu-1804', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu']
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu-1804', 'gcr.io/$PROJECT_ID/jdk:8']
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/jdk:8-ubuntu-1804', 'gcr.io/$PROJECT_ID/jdk:latest']

# store images
images: 
- 'gcr.io/exo-docker/jdk:8-ubuntu-1604'
- 'gcr.io/exo-docker/jdk:8-ubuntu-16'
- 'gcr.io/exo-docker/jdk:8-ubuntu-1804'
- 'gcr.io/exo-docker/jdk:8-ubuntu-18'
- 'gcr.io/exo-docker/jdk:8-ubuntu'
- 'gcr.io/exo-docker/jdk:8'
- 'gcr.io/exo-docker/jdk:latest'
